---
import type { MarkdownHeading, MarkdownLayoutProps } from "astro";
import BaseLayout from "./BaseLayout.astro";
import { Picture } from "@astrojs/image/components";
import type { Frontmatter } from "../frontmatter";
import Pill from "../components/Pill.astro";
import { TableOfContents } from "../components/TableOfContents";
import type { CollectionEntry } from "astro:content";
import type { Headings } from "../schemas";

interface Props {
  minutesToRead: number;
  entry: CollectionEntry<"blog"> | CollectionEntry<"tutorials">;
  headings: Headings;
}

const { minutesToRead, entry } = Astro.props;

const estimatedReadingTime = Math.floor(minutesToRead);
const books = "ðŸ“š".repeat(Math.floor(estimatedReadingTime / 3));
const publishDate = entry.data.publishedOn.toLocaleDateString("en-us", {
  year: "numeric",
  month: "long",
  day: "numeric",
});

const fullUrl = `https://tylerwray.me/blog/${entry.slug}/`;
const githubEditPath = `/src/content/blog/${entry.slug}.md`;

const headings: MarkdownHeading[] = [
  { depth: 2, slug: "overview", text: "Overview" },
  ...Astro.props.headings,
].filter(({ depth }) => depth < 4);
---

<BaseLayout
  title={entry.data.title}
  tags={entry.data.tags}
  image={entry.data.image.src}
  imageAlt={entry.data.image.alt}
>
  <TableOfContents
    client:media="(min-width: 80rem)"
    headings={headings}
    slot="right-sidebar"
  />
  <script>
    async function copyToClipboard(e: Event) {
      // Traverse the dom to find the code string.
      // <button /> is sibling of <pre /> who has a child of <code /> that we want to copy.
      const button = e.currentTarget as HTMLButtonElement;

      if (!button) {
        return;
      }

      const codeToCopy = button.nextSibling?.firstChild?.textContent ?? "";

      try {
        await navigator.clipboard.writeText(codeToCopy);
        button.innerText = "Copied!";
        setTimeout(() => {
          button.innerText = "Copy";
        }, 2500);
      } catch (e) {
        console.error("Could not copy code: ", e);
      }
    }

    document.querySelectorAll(".code-block-copy-button").forEach((button) => {
      button.addEventListener("click", copyToClipboard);
    });
  </script>
  <header>
    <h1 class="text-3xl font-extrabold pb-2" id="overview">
      {entry.data.title}
    </h1>

    <div class="pb-4">
      <time datetime={entry.data.publishedOn.toString()}>{publishDate}</time>
      <span class="px-2">{" â€¢ "}</span>
      <span>
        {books}
        {estimatedReadingTime} min read
      </span>
      <span class="px-2">{" â€¢ "}</span>

      <a
        target="_blank"
        class="text-purple-600 dark:text-purple-400 hover:underline font-medium"
        rel="noopener noreferrer"
        href={`https://twitter.com/intent/tweet?url=${encodeURIComponent(
          fullUrl
        )}`}
      >
        Tweet this post
      </a>
    </div>

    <div
      class="h-0 overflow-hidden pt-[56.25%] relative bg-zinc-800/25 rounded-md shadow-lg"
    >
      <Picture
        widths={[600, 800, 1200, 1600]}
        sizes="(max-width: 800px) 90vw, 768px"
        aspectRatio={16 / 9}
        src={entry.data.image.src}
        loading="eager"
        alt={entry.data.image.alt}
        class="rounded-md overflow-hidden absolute top-0 left-0"
        width={768}
        height={402}
      />
    </div>

    <div class="pt-1 pb-4 text-sm text-center text-zinc-700 dark:text-zinc-200">
      Photo By <a
        class="text-purple-600 dark:text-purple-400 hover:underline font-medium"
        href={entry.data.image.creditUrl}>{entry.data.image.creditName}</a
      >
    </div>
  </header>

  <slot name="tutorial-steps" />

  <article class="prose max-w-none dark:prose-invert">
    <h2 class="sr-only" id="introduction"></h2>
    <slot />
  </article>

  <slot name="step-buttons" />

  <div class="grid grid-cols-[auto_1fr_auto] pt-8 pb-4">
    <a
      target="_blank"
      class="text-purple-600 dark:text-purple-400 hover:underline font-medium"
      rel="noopener noreferrer"
      href={`https://mobile.twitter.com/search?q=${encodeURIComponent(
        "/TODO-blogPostUrl"
      )}`}
    >
      Discuss on Twitter
    </a>

    <div></div>

    <a
      class="grid grid-cols-[auto_1fr] items-center gap-1 text-purple-600 dark:text-purple-400 hover:underline font-medium"
      target="_blank"
      rel="noopener noreferrer"
      href={`https://github.com/tylerwray/me/edit/main${githubEditPath}`}
    >
      <!-- Heroicons: pencil -->
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="currentColor"
        class="w-4 h-4"
      >
        <path
          d="M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-12.15 12.15a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32L19.513 8.2z"
        ></path>
      </svg>

      Edit post on GitHub
    </a>
  </div>

  <div class="flex flex-wrap gap-1 py-4">
    {entry.data.tags?.map((tag) => <Pill tag={tag}>{tag}</Pill>)}
  </div>
</BaseLayout>
