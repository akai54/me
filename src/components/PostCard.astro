---
import { Image } from "astro:assets";
import type { HTMLAttributes } from "astro/types";
import type { Tag } from "../content/config";
import Pill from "./Pill.astro";

interface Props extends HTMLAttributes<"a"> {
  imageSrc?: ImageMetadata;
  imageAlt?: string;
  tags?: Tag[];
  title: string;
  description: string;
}

const {
  imageSrc,
  imageAlt,
  tags = [],
  title,
  description,
  ...rest
} = Astro.props;
---

<a
  {...rest}
  class="grid group w-80 p-4 rounded-md hover:bg-zinc-200 dark:hover:bg-zinc-700/75 transition-colors"
>
  {imageSrc && ( <Image
    transition:name={`hero-image-${imageAlt}`}
    src={imageSrc}
    class="h-40 w-72 object-cover rounded-md overflow-hidden"
    alt={imageAlt ?? ""}
  />
  )}

  <div class="relative pt-4 pb-2 w-s">
    <h3 class="text-lg font-bold" transition:name={`hero-title-${title}`}>
      {title}
    </h3>
    <span
      class="h-0.5 left-0 w-full block absolute scale-x-0 group-hover:scale-x-100 transition-transform ease-in origin-left group-hover:bg-black dark:group-hover:bg-white"
    ></span>
  </div>

  <p class="dark:text-zinc-300 font-normal pb-4 line-clamp">
    {description.length > 100 ? description.substring(0, 100).concat("...") : description}
  </p>

  <div class="flex flex-wrap gap-1">
    {tags.map((tag) => <Pill tag={tag}>{tag}</Pill>)}
  </div>
</a>
