---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import EntryLayout from "../../layouts/EntryLayout.astro";
import { HeadingsSchema, MinutesToReadSchema } from "../../content/config";

export async function getStaticPaths() {
  const translationEntries = await getCollection("translations", (entry) => {
    // Exclude draft posts in production
    if (import.meta.env.PROD && entry.data.draft) {
      return false;
    }
    return true;
  });

  return translationEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"translations">;
}

const { entry } = Astro.props;

const { Content, remarkPluginFrontmatter, headings } = await entry.render();

const minutesToRead = MinutesToReadSchema.parse(
  remarkPluginFrontmatter.minutesToRead
);

const entryHeadings = HeadingsSchema.parse(headings);

// Check if the original language is Arabic
const isRTL = entry.data.translation.targetLanguage === "Arabic";
---

<EntryLayout
  minutesToRead={minutesToRead}
  entry={entry}
  headings={entryHeadings}
>
  <div class:list={[
    "prose dark:prose-invert max-w-none",
    { "rtl": isRTL } // Add rtl class if the language is Arabic
  ]}>
    <Content />
  </div>
</EntryLayout>
