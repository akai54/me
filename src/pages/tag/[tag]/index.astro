---
import { getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import PostCard from '../../../components/PostCard.astro';

export async function getStaticPaths() {
    const blogEntries = await getCollection('blog');
    const tutorialEntries = await getCollection('tutorials');
    const translationsEntries = await getCollection('translations');
    const allTags = [...blogEntries, ...tutorialEntries, ...translationsEntries].flatMap(post => post.data.tags);
    return [...new Set(allTags)].map(tag => ({ params: { tag } }));
}

const { tag } = Astro.params;
const formattedTag = tag.replace(/_/g, ' ');

const filteredPosts = (await getCollection('blog', ({ data }) => data.tags.includes(tag)))
    .concat(await getCollection('tutorials', ({ data }) => data.tags.includes(tag)))
    .concat(await getCollection('translations', ({ data }) => data.tags.includes(tag)))
    .sort((a, b) => b.data.publishedOn.valueOf() - a.data.publishedOn.valueOf());
---

<BaseLayout
    title={`Posts tagged "${formattedTag}"`}
    description={`All blog posts and tutorials tagged with ${formattedTag}`}
>
    <h1 class="text-3xl font-extrabold pb-4">Posts tagged <span class="text-purple-600 dark:text-purple-400">{formattedTag}</span></h1>
    <p class="pb-8 dark:text-zinc-300">
        All content related to {formattedTag}
    </p>

    <hr class="py-6 border-zinc-300 dark:border-zinc-600" />

    <div class="grid gap-6 sm:grid-cols-2 justify-items-center items-start">
        {filteredPosts.map((post) => (
            <PostCard 
                href={`/${post.collection}/${post.slug}`}
                imageSrc={post.data.imageSrc}
                imageAlt={post.data.title}
                tags={post.data.tags}
                title={post.data.title}
                description={post.data.description}
            />
        ))}
    </div>
</BaseLayout>